<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)    -->
<!-- code generation utility specially developed for <tt>onway</tt> project.        -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>onway-gen-dal</tt> to generate this file.                                  -->
<!--                                                                               -->
<!-- @author guangdong.li                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="onway">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table makeploy_partner -->
    <resultMap id="RM-PARTNER" class="com.onway.makeploy.common.dal.dataobject.PartnerDO">
		<result property="id" column="ID"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="userId" column="USER_ID"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="partnerUserId" column="PARTNER_USER_ID"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="partnerAccout.cent" column="PARTNER_ACCOUT"  javaType="long" jdbcType="DECIMAL" />
		<result property="partnerNum" column="PARTNER_NUM"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="creater" column="CREATER"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="gmtCreate" column="GMT_CREATE"  javaType="java.util.Date" jdbcType="DATETIME" />
		<result property="modifier" column="MODIFIER"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="gmtModified" column="GMT_MODIFIED"  javaType="java.util.Date" jdbcType="DATETIME" />
		<result property="memo" column="MEMO"  javaType="java.lang.String" jdbcType="VARCHAR" />
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisPartnerDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisPartnerDAO.selectPartnerMoney -->
    <select id="MS-PARTNER-SELECT-PARTNER-MONEY" resultMap="RM-PARTNER">
        SELECT * FROM makeploy_partner WHERE USER_ID = '1' AND PARTNER_USER_ID= '1'
    </select>

    <!-- mapped statement for IbatisPartnerDAO.changePartnerSum -->
    <update id="MS-PARTNER-CHANGE-PARTNER-SUM">
    <![CDATA[
        update makeploy_partner set MEMO=#value#, GMT_MODIFIED=CURRENT_TIMESTAMP where ((USER_ID = '1') AND (PARTNER_USER_ID = '1'))
    ]]>
    </update>

    <!-- mapped statement for IbatisPartnerDAO.updatePartnerMoney -->
    <update id="MS-PARTNER-UPDATE-PARTNER-MONEY">
    <![CDATA[
        update makeploy_partner set PARTNER_ACCOUT=#partnerAccout.cent#, GMT_MODIFIED=CURRENT_TIMESTAMP where ((USER_ID = #userId#) AND (PARTNER_USER_ID = #partnerUserId#))
    ]]>
    </update>

    <!-- mapped statement for IbatisPartnerDAO.selectPartnerCount -->
    <select id="MS-PARTNER-SELECT-PARTNER-COUNT" resultClass="int">
    <![CDATA[
        select count(1) from makeploy_partner
    ]]>
    </select>

    <!-- mapped statement for IbatisPartnerDAO.joinPartner -->
    <insert id="MS-PARTNER-JOIN-PARTNER">
    <![CDATA[
        insert into makeploy_partner(ID,USER_ID,PARTNER_USER_ID,PARTNER_ACCOUT,PARTNER_NUM,CREATER,GMT_CREATE,MODIFIER,GMT_MODIFIED,MEMO) values (#id#, #userId#, #partnerUserId#, #partnerAccout.cent#, #partnerNum#, #creater#, CURRENT_TIMESTAMP, #modifier#, CURRENT_TIMESTAMP, #memo#)
    ]]>
	<selectKey resultClass="int" keyProperty="id">
       select last_insert_id() as id
    </selectKey>
    </insert>

    <!-- mapped statement for IbatisPartnerDAO.checkPartnerByPUserId -->
    <select id="MS-PARTNER-CHECK-PARTNER-BY-P-USER-ID" resultMap="RM-PARTNER">
        SELECT
			    ID,
				USER_ID,
				PARTNER_USER_ID,
				PARTNER_ACCOUT,
				PARTNER_NUM,
				CREATER,
				GMT_CREATE,
				MODIFIER,
				GMT_MODIFIED,
				MEMO
			FROM makeploy_partner WHERE PARTNER_USER_ID = #partnerUserId#
    </select>

    <!-- mapped statement for IbatisPartnerDAO.selectPartnerUserId -->
    <select id="MS-PARTNER-SELECT-PARTNER-USER-ID" resultMap="RM-PARTNER">
        SELECT
			    ID,
				USER_ID,
				PARTNER_USER_ID,
				PARTNER_ACCOUT,
				PARTNER_NUM,
				CREATER,
				GMT_CREATE,
				MODIFIER,
				GMT_MODIFIED,
				MEMO
			FROM makeploy_partner WHERE PARTNER_USER_ID &lt;&gt; 1
			<isNotEmpty property="partnerUserId" prepend="and">
	            PARTNER_USER_ID = #partnerUserId# 
	        </isNotEmpty>
	        order by PARTNER_NUM 
	        <isNotNull property="offent">
                limit $offent$,$limit$
            </isNotNull>
    </select>

    <!-- mapped statement for IbatisPartnerDAO.selectAll -->
    <select id="MS-PARTNER-SELECT-ALL" resultMap="RM-PARTNER">
        SELECT
			    ID,
				USER_ID,
				PARTNER_USER_ID,
				PARTNER_ACCOUT,
				PARTNER_NUM,
				CREATER,
				GMT_CREATE,
				MODIFIER,
				GMT_MODIFIED,
				MEMO
			FROM makeploy_partner
    </select>

    <!-- mapped statement for IbatisPartnerDAO.selectPartnerUserIdCount -->
    <select id="MS-PARTNER-SELECT-PARTNER-USER-ID-COUNT" resultClass="long">
        SELECT count(1)
			FROM makeploy_partner WHERE PARTNER_USER_ID &lt;&gt; 1
			<isNotEmpty property="partnerUserId" prepend="and">
	            PARTNER_USER_ID = #partnerUserId# 
	        </isNotEmpty>
    </select>

    <!-- mapped statement for IbatisPartnerDAO.selectLastPartner -->
    <select id="MS-PARTNER-SELECT-LAST-PARTNER" resultMap="RM-PARTNER">
        SELECT
			    ID,
				USER_ID,
				PARTNER_USER_ID,
				PARTNER_ACCOUT,
				PARTNER_NUM,
				CREATER,
				GMT_CREATE,
				MODIFIER,
				GMT_MODIFIED,
				MEMO
			FROM makeploy_partner 
			order by PARTNER_NUM desc limit 
			<isNotNull property="offent">
                limit $offent$,$limit$
            </isNotNull>
    </select>

    <!-- mapped statement for IbatisPartnerDAO.selectLastPartnerIncreasc -->
    <select id="MS-PARTNER-SELECT-LAST-PARTNER-INCREASC" resultMap="RM-PARTNER">
        SELECT
			    ID,
				USER_ID,
				PARTNER_USER_ID,
				PARTNER_ACCOUT,
				PARTNER_NUM,
				CREATER,
				GMT_CREATE,
				MODIFIER,
				GMT_MODIFIED,
				MEMO
			FROM makeploy_partner 
			order by PARTNER_NUM 
            <isNotNull property="offent">
                limit $offent$,$limit$
            </isNotNull>
    </select>

    <!-- mapped statement for IbatisPartnerDAO.changePartnerNum -->
    <update id="MS-PARTNER-CHANGE-PARTNER-NUM">
    <![CDATA[
        update makeploy_partner set PARTNER_NUM=#partnerNum# where (PARTNER_USER_ID = #partnerUserId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisPartnerDAO.selectAllPartnerNumIsNotNull -->
    <select id="MS-PARTNER-SELECT-ALL-PARTNER-NUM-IS-NOT-NULL" resultMap="RM-PARTNER">
        SELECT
			    ID,
				USER_ID,
				PARTNER_USER_ID,
				PARTNER_ACCOUT,
				PARTNER_NUM,
				CREATER,
				GMT_CREATE,
				MODIFIER,
				GMT_MODIFIED,
				MEMO
			FROM makeploy_partner where MEMO is not null  AND id &lt;&gt; 1 order by PARTNER_NUM
			<isNotNull property="offent">
                limit $offent$,$limit$
            </isNotNull>
    </select>

    <!-- mapped statement for IbatisPartnerDAO.selectAllPartnerNumIsNotNullDesc -->
    <select id="MS-PARTNER-SELECT-ALL-PARTNER-NUM-IS-NOT-NULL-DESC" resultMap="RM-PARTNER">
        SELECT
			    ID,
				USER_ID,
				PARTNER_USER_ID,
				PARTNER_ACCOUT,
				PARTNER_NUM,
				CREATER,
				GMT_CREATE,
				MODIFIER,
				GMT_MODIFIED,
				MEMO
			FROM makeploy_partner where MEMO is not null  AND id &lt;&gt; 1 order by PARTNER_NUM desc
			<isNotNull property="offent">
                limit $offent$,$limit$
            </isNotNull>
    </select>

    <!-- mapped statement for IbatisPartnerDAO.checkOutYesOrNot -->
    <select id="MS-PARTNER-CHECK-OUT-YES-OR-NOT" resultMap="RM-PARTNER">
        SELECT
			    ID,
				USER_ID,
				PARTNER_USER_ID,
				PARTNER_ACCOUT,
				PARTNER_NUM,
				CREATER,
				GMT_CREATE,
				MODIFIER,
				GMT_MODIFIED,
				MEMO
			FROM makeploy_partner where PARTNER_NUM = MEMO
    </select>

</sqlMap>