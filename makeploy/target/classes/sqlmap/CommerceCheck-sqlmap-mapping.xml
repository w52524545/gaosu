<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)    -->
<!-- code generation utility specially developed for <tt>onway</tt> project.        -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>onway-gen-dal</tt> to generate this file.                                  -->
<!--                                                                               -->
<!-- @author guangdong.li                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="onway">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table makeploy_commerce_check -->
    <resultMap id="RM-COMMERCE-CHECK" class="com.onway.makeploy.common.dal.dataobject.CommerceCheckDO">
		<result property="id" column="ID"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="userId" column="USER_ID"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="commerceId" column="COMMERCE_ID"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="userName" column="USER_NAME"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="userCell" column="USER_CELL"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="userJob" column="USER_JOB"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="cardAddr" column="CARD_ADDR"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="nowAddr" column="NOW_ADDR"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="messages" column="MESSAGES"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="status" column="STATUS"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="creater" column="CREATER"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="gmtCreate" column="GMT_CREATE"  javaType="java.util.Date" jdbcType="DATETIME" />
		<result property="modifier" column="MODIFIER"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="gmtModified" column="GMT_MODIFIED"  javaType="java.util.Date" jdbcType="DATETIME" />
		<result property="memo" column="MEMO"  javaType="java.lang.String" jdbcType="VARCHAR" />
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisCommerceCheckDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisCommerceCheckDAO.selectAllCommerceCheck -->
    <select id="MS-COMMERCE-CHECK-SELECT-ALL-COMMERCE-CHECK" resultMap="RM-COMMERCE-CHECK">
        SELECT
				ID,
				USER_ID,
				COMMERCE_ID,
				USER_NAME,
				USER_CELL,
				USER_JOB,
				CARD_ADDR,
				NOW_ADDR,
				MESSAGES,
				STATUS,
				CREATER,
				GMT_CREATE,
				MODIFIER,
				GMT_MODIFIED,
				MEMO
			FROM makeploy_commerce_check  
	        order by GMT_MODIFIED DESC
	        limit #offset#,#limit#
    </select>

    <!-- mapped statement for IbatisCommerceCheckDAO.changeCommerceUserInfo -->
    <update id="MS-COMMERCE-CHECK-CHANGE-COMMERCE-USER-INFO">
    <![CDATA[
        update makeploy_commerce_check set USER_NAME=#userName#, USER_CELL=#userCell#, USER_JOB=#userJob#, CARD_ADDR=#cardAddr#, NOW_ADDR=#nowAddr#, GMT_MODIFIED=CURRENT_TIMESTAMP where ((USER_ID = #userId#) AND (COMMERCE_ID = #commerceId#))
    ]]>
    </update>

    <!-- mapped statement for IbatisCommerceCheckDAO.countitmes -->
    <select id="MS-COMMERCE-CHECK-COUNTITMES" resultClass="int">
    <![CDATA[
        select count(1) from makeploy_commerce_check
    ]]>
    </select>

    <!-- mapped statement for IbatisCommerceCheckDAO.updateOldCommerceCheck -->
    <update id="MS-COMMERCE-CHECK-UPDATE-OLD-COMMERCE-CHECK">
    <![CDATA[
        update makeploy_commerce_check set STATUS=#status#, GMT_MODIFIED=CURRENT_TIMESTAMP where ((USER_ID = #userId#) AND (COMMERCE_ID = #commerceId#))
    ]]>
    </update>

    <!-- mapped statement for IbatisCommerceCheckDAO.selectMyCommerceCheck -->
    <select id="MS-COMMERCE-CHECK-SELECT-MY-COMMERCE-CHECK" resultMap="RM-COMMERCE-CHECK">
        SELECT
                ID,
				USER_ID,
				COMMERCE_ID,
				USER_NAME,
				USER_CELL,
				USER_JOB,
				CARD_ADDR,
				NOW_ADDR,
				MESSAGES,
				STATUS,
				CREATER,
				GMT_CREATE,
				MODIFIER,
				GMT_MODIFIED,
				MEMO
			FROM makeploy_commerce_check
			<dynamic prepend="where">
                <isNotNull property="userId" prepend="and">
                    USER_ID = #userId#
                </isNotNull>
                <isNotNull property="commerceId" prepend="and">
                    COMMERCE_ID = #commerceId#
                </isNotNull>
            </dynamic>
    </select>

    <!-- mapped statement for IbatisCommerceCheckDAO.addCommerceCheck -->
    <insert id="MS-COMMERCE-CHECK-ADD-COMMERCE-CHECK">
    <![CDATA[
        insert into makeploy_commerce_check(ID,USER_ID,COMMERCE_ID,USER_NAME,USER_CELL,USER_JOB,CARD_ADDR,NOW_ADDR,MESSAGES,STATUS,CREATER,GMT_CREATE,MODIFIER,GMT_MODIFIED,MEMO) values (#id#, #userId#, #commerceId#, #userName#, #userCell#, #userJob#, #cardAddr#, #nowAddr#, #messages#, #status#, #creater#, CURRENT_TIMESTAMP, #modifier#, CURRENT_TIMESTAMP, #memo#)
    ]]>
	<selectKey resultClass="int" keyProperty="id">
       select last_insert_id() as id
    </selectKey>
    </insert>

    <!-- mapped statement for IbatisCommerceCheckDAO.updateCommerceCheck -->
    <update id="MS-COMMERCE-CHECK-UPDATE-COMMERCE-CHECK">
    <![CDATA[
        update makeploy_commerce_check set STATUS=#status#, GMT_MODIFIED=CURRENT_TIMESTAMP where ((USER_ID = #userId#) AND (COMMERCE_ID = #commerceId#))
    ]]>
    </update>

</sqlMap>