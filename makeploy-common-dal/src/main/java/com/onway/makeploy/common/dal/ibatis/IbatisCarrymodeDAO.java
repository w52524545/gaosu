/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.makeploy.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.makeploy.common.dal.daointerface.CarrymodeDAO;

import com.onway.makeploy.common.dal.dataobject.CarrymodeDO;
import org.springframework.dao.DataAccessException;
import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.makeploy.common.dal.daointerface.CarrymodeDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/makeploy_carrymode.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisCarrymodeDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisCarrymodeDAO extends SqlMapClientDaoSupport implements CarrymodeDAO {
	/**
	 *  Query DB table <tt>makeploy_carrymode</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_carrymode</tt>
	 *
	 *	@param templateId
	 *	@return CarrymodeDO
	 *	@throws DataAccessException
	 */	 
    public CarrymodeDO selectAllCarryModeByTemplateId(String templateId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("templateId", templateId);

        return (CarrymodeDO) getSqlMapClientTemplate().queryForObject("MS-CARRYMODE-SELECT-ALL-CARRY-MODE-BY-TEMPLATE-ID", param);

    }

	/**
	 *  Insert one <tt>CarrymodeDO</tt> object to DB table <tt>makeploy_carrymode</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into makeploy_carrymode(ID,TEMPLATE_ID,SEND_ADDRESS,FIRST_COUNT,FIRST_WEIGHT,FIRST_SIZE,FIRST_MONEY,NEXT_COUNT,NEXT_WEIGHT,NEXT_SIZE,NEXT_MONEY,POST_WAY,DEL_FLAG,PRETERMISSION,CREATER,GMT_CREATE,MODIFIER,GMT_MODIFIED,MEMO) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, CURRENT_TIMESTAMP, ?)</tt>
	 *
	 *	@param carrymode
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int addNewCarryMode(CarrymodeDO carrymode) throws DataAccessException {
    	if (carrymode == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-CARRYMODE-ADD-NEW-CARRY-MODE", carrymode);

        return carrymode.getId();
    }

	/**
	 *  Update DB table <tt>makeploy_carrymode</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_carrymode set DEL_FLAG=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (TEMPLATE_ID = ?)</tt>
	 *
	 *	@param delFlag
	 *	@param templateId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int changeDelFlg(String delFlag, String templateId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("delFlag", delFlag);
        param.put("templateId", templateId);

        return getSqlMapClientTemplate().update("MS-CARRYMODE-CHANGE-DEL-FLG", param);
    }

}