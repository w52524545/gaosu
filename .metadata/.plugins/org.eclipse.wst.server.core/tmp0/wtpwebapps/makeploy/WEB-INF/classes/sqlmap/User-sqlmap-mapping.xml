<?xml version="1.0" encoding="GB2312" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<!-- ==========================================================  -->
<!-- Configuration for ibatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)    -->
<!-- code generation utility specially developed for <tt>onway</tt> project.        -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>onway-gen-dal</tt> to generate this file.                                  -->
<!--                                                                               -->
<!-- @author guangdong.li                                                             -->
<!-- ============================================================================= -->

<sqlMap namespace="onway">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->

    <!-- result maps for database table makeploy_user -->
    <resultMap id="RM-USER" class="com.onway.makeploy.common.dal.dataobject.UserDO">
		<result property="id" column="ID"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="userId" column="USER_ID"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="wechatId" column="WECHAT_ID"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="promoteId" column="PROMOTE_ID"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="shopId" column="SHOP_ID"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="commerceId" column="COMMERCE_ID"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="userName" column="USER_NAME"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="userNum" column="USER_NUM"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="cell" column="CELL"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="nickName" column="NICK_NAME"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="sex" column="SEX"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="headUrl" column="HEAD_URL"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="passWord" column="PASS_WORD"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="certType" column="CERT_TYPE"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="certNo" column="CERT_NO"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="consumeAccout.cent" column="CONSUME_ACCOUT"  javaType="long" jdbcType="DECIMAL" />
		<result property="dividendAccout.cent" column="DIVIDEND_ACCOUT"  javaType="long" jdbcType="DECIMAL" />
		<result property="pointAccout" column="POINT_ACCOUT"  javaType="int" jdbcType="INT"  nullValue="0"/>
		<result property="withdrawAccout.cent" column="WITHDRAW_ACCOUT"  javaType="long" jdbcType="DECIMAL" />
		<result property="balance.cent" column="BALANCE"  javaType="long" jdbcType="DECIMAL" />
		<result property="totalBalance.cent" column="TOTAL_BALANCE"  javaType="long" jdbcType="DECIMAL" />
		<result property="incomeWeek.cent" column="INCOME_WEEK"  javaType="long" jdbcType="DECIMAL" />
		<result property="highUserId" column="HIGH_USER_ID"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="qrUrl" column="QR_URL"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="creater" column="CREATER"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="gmtCreate" column="GMT_CREATE"  javaType="java.util.Date" jdbcType="DATETIME" />
		<result property="modifier" column="MODIFIER"  javaType="java.lang.String" jdbcType="VARCHAR" />
		<result property="gmtModified" column="GMT_MODIFIED"  javaType="java.util.Date" jdbcType="DATETIME" />
		<result property="memo" column="MEMO"  javaType="java.lang.String" jdbcType="VARCHAR" />
    </resultMap>


    <!-- ============================================= -->
    <!-- mapped statements for IbatisUserDAO -->
    <!-- ============================================= -->
    <!-- mapped statement for IbatisUserDAO.selectUserInfoByUserId -->
    <select id="MS-USER-SELECT-USER-INFO-BY-USER-ID" resultMap="RM-USER">
        SELECT
			*
			FROM makeploy_user
			WHERE USER_ID = #userId#
    </select>

    <!-- mapped statement for IbatisUserDAO.selectUserInfoByCommerceId -->
    <select id="MS-USER-SELECT-USER-INFO-BY-COMMERCE-ID" resultMap="RM-USER">
        SELECT
			*
			FROM makeploy_user
			WHERE COMMERCE_ID = #commerceId#
    </select>

    <!-- mapped statement for IbatisUserDAO.addUserInfo -->
    <insert id="MS-USER-ADD-USER-INFO">
    <![CDATA[
        insert into makeploy_user(ID,USER_ID,WECHAT_ID,PROMOTE_ID,SHOP_ID,COMMERCE_ID,USER_NAME,USER_NUM,CELL,NICK_NAME,SEX,HEAD_URL,PASS_WORD,CERT_TYPE,CERT_NO,CONSUME_ACCOUT,DIVIDEND_ACCOUT,WITHDRAW_ACCOUT,BALANCE,TOTAL_BALANCE,INCOME_WEEK,HIGH_USER_ID,QR_URL,CREATER,GMT_CREATE,MODIFIER,GMT_MODIFIED,MEMO) values (#id#, #userId#, #wechatId#, #promoteId#, #shopId#, #commerceId#, #userName#, #userNum#, #cell#, #nickName#, #sex#, #headUrl#, #passWord#, #certType#, #certNo#, #consumeAccout.cent#, #dividendAccout.cent#, #withdrawAccout.cent#, #balance.cent#, #totalBalance.cent#, #incomeWeek.cent#, #highUserId#, #qrUrl#, #creater#, CURRENT_TIMESTAMP, #modifier#, CURRENT_TIMESTAMP, #memo#)
    ]]>
	<selectKey resultClass="int" keyProperty="id">
       select last_insert_id() as id
    </selectKey>
    </insert>

    <!-- mapped statement for IbatisUserDAO.updateUserInfo -->
    <update id="MS-USER-UPDATE-USER-INFO">
    <![CDATA[
        update makeploy_user set CELL=#cell#, NICK_NAME=#nickName#, HEAD_URL=#headUrl#, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisUserDAO.updateUserQR -->
    <update id="MS-USER-UPDATE-USER-QR">
    <![CDATA[
        update makeploy_user set QR_URL=#qrUrl#, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisUserDAO.login -->
    <select id="MS-USER-LOGIN" resultClass="java.lang.String">
        SELECT
			makeploy_user.PASS_WORD as pw
			FROM
			makeploy_role
			RIGHT JOIN makeploy_user ON makeploy_role.USER_ID = makeploy_user.USER_ID
			WHERE
			makeploy_role.ROLE = #role# AND
			makeploy_user.CELL = #cell#
    </select>

    <!-- mapped statement for IbatisUserDAO.selectUserInfoByCell -->
    <select id="MS-USER-SELECT-USER-INFO-BY-CELL" resultMap="RM-USER">
    <![CDATA[
        select * from makeploy_user where (CELL = #value#)
    ]]>
    </select>

    <!-- mapped statement for IbatisUserDAO.updateWithDraw -->
    <update id="MS-USER-UPDATE-WITH-DRAW">
    <![CDATA[
        update makeploy_user set WITHDRAW_ACCOUT=#withdrawAccout.cent#, BALANCE=#balance.cent#, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisUserDAO.userInfo -->
    <select id="MS-USER-USER-INFO" resultMap="RM-USER">
        select 
       ID,
        USER_ID,
		     WECHAT_ID,
		     SHOP_ID,
		     COMMERCE_ID,
		     PROMOTE_ID,
		     USER_NAME,
		     USER_NUM,
		     CELL,
		     NICK_NAME,
		     SEX,
		     HEAD_URL,
		     PASS_WORD,
		     CERT_TYPE,
		     CERT_NO,
		     CONSUME_ACCOUT,
		     DIVIDEND_ACCOUT,
		     POINT_ACCOUT,
		     WITHDRAW_ACCOUT,
		     BALANCE,
		     TOTAL_BALANCE,
		     INCOME_WEEK,
		     HIGH_USER_ID,
		     QR_URL,
		     CREATER,
		     GMT_CREATE,
		     MODIFIER,
		     GMT_MODIFIED,
		     MEMO
		     from makeploy_user where 1=1
		     <isNotEmpty property="userId" prepend="and">
	                USER_ID = #userId#
	            </isNotEmpty>   
	            <isNotEmpty property="cell" prepend="and">
	                CELL = #cell#
	            </isNotEmpty>   
	            <isNotEmpty property="userNickName" prepend="and">
	                NICK_NAME = #userNickName#
	            </isNotEmpty>
	             limit #offent#,#limit#
    </select>

    <!-- mapped statement for IbatisUserDAO.count -->
    <select id="MS-USER-COUNT" resultClass="long">
        select count(1) from makeploy_user
      	where 1=1
      	<isNotEmpty property="userId" prepend="and">
			USER_ID	= #userId#
		</isNotEmpty>
		<isNotEmpty property="cell" prepend="and">
			CELL = #cell#
		</isNotEmpty>
		<isNotEmpty property="userNickName" prepend="and">
	                NICK_NAME = #userNickName#
	    </isNotEmpty>
    </select>

    <!-- mapped statement for IbatisUserDAO.updateUserReturn -->
    <update id="MS-USER-UPDATE-USER-RETURN">
    <![CDATA[
        update makeploy_user set POINT_ACCOUT=#pointAccout#, BALANCE=#balance.cent#, WITHDRAW_ACCOUT=#withdrawAccout.cent#, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisUserDAO.updatePass -->
    <update id="MS-USER-UPDATE-PASS">
    <![CDATA[
        update makeploy_user set PASS_WORD=#passWord#, GMT_MODIFIED=CURRENT_TIMESTAMP where (CELL = #cell#)
    ]]>
    </update>

    <!-- mapped statement for IbatisUserDAO.addShopByUserId -->
    <update id="MS-USER-ADD-SHOP-BY-USER-ID">
    <![CDATA[
        update makeploy_user set SHOP_ID=#shopId#, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisUserDAO.selectByUserIDAndCell -->
    <select id="MS-USER-SELECT-BY-USER-ID-AND-CELL" resultMap="RM-USER">
        select * from makeploy_user 
		where 1=1
		<isNotEmpty property="userId" prepend="and">
			USER_ID	= #userId#
		</isNotEmpty>
		<isNotEmpty property="cell" prepend="and">
			CELL = #cell#
		</isNotEmpty>
		limit #offset#,#limit#
    </select>

    <!-- mapped statement for IbatisUserDAO.updateHighByUserId -->
    <update id="MS-USER-UPDATE-HIGH-BY-USER-ID">
    <![CDATA[
        update makeploy_user set HIGH_USER_ID=#highUserId#, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisUserDAO.sethightestUser -->
    <update id="MS-USER-SETHIGHTEST-USER">
    <![CDATA[
        update makeploy_user set HIGH_USER_ID=#highUserId#, CERT_TYPE='1', GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisUserDAO.updateBalanceMoneyByUserId -->
    <update id="MS-USER-UPDATE-BALANCE-MONEY-BY-USER-ID">
    <![CDATA[
        update makeploy_user set BALANCE=#balance.cent#, TOTAL_BALANCE=#totalBalance.cent#, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = #userId#)
    ]]>
    </update>

    <!-- mapped statement for IbatisUserDAO.selectUserInfoByShopId -->
    <select id="MS-USER-SELECT-USER-INFO-BY-SHOP-ID" resultMap="RM-USER">
        SELECT
		     ID,
		     USER_ID,
		     PROMOTE_ID,
		     WECHAT_ID,
		     SHOP_ID,
		     COMMERCE_ID,
		     USER_NAME,
		     USER_NUM,
		     CELL,
		     NICK_NAME,
		     SEX,
		     HEAD_URL,
		     PASS_WORD,
		     CERT_TYPE,
		     CERT_NO,
		     CONSUME_ACCOUT,
		     DIVIDEND_ACCOUT,
		     POINT_ACCOUT,
		     WITHDRAW_ACCOUT,
		     BALANCE,
		     TOTAL_BALANCE,
		     INCOME_WEEK,
		     HIGH_USER_ID,
		     QR_URL,
		     CREATER,
		     GMT_CREATE,
		     MODIFIER,
		     GMT_MODIFIED,
		     MEMO
			FROM makeploy_user
            WHERE SHOP_ID = #shopId#
    </select>

    <!-- mapped statement for IbatisUserDAO.searchCommerceUser -->
    <select id="MS-USER-SEARCH-COMMERCE-USER" resultMap="RM-USER">
        select 
				 ID,
			     USER_ID,
			     PROMOTE_ID,
			     WECHAT_ID,
			     SHOP_ID,
			     COMMERCE_ID,
			     USER_NAME,
			     USER_NUM,
			     CELL,
			     NICK_NAME,
			     SEX,
			     HEAD_URL,
			     PASS_WORD,
			     CERT_TYPE,
			     CERT_NO,
			     CONSUME_ACCOUT,
			     DIVIDEND_ACCOUT,
			     POINT_ACCOUT,
			     WITHDRAW_ACCOUT,
			     BALANCE,
			     TOTAL_BALANCE,
			     INCOME_WEEK,
			     HIGH_USER_ID,
			     QR_URL,
			     CREATER,
			     GMT_CREATE,
			     MODIFIER,
			     GMT_MODIFIED,
			     MEMO
				from makeploy_user where 1=1 
				<isNotEmpty property="commerceId" prepend="and"> 
	               COMMERCE_ID like '%$commerceId$%'
	            </isNotEmpty>
				<isNotNull property="startRow">
                limit $startRow$,$pageSize$
                </isNotNull>
    </select>

    <!-- mapped statement for IbatisUserDAO.searchCommerceUserCount -->
    <select id="MS-USER-SEARCH-COMMERCE-USER-COUNT" resultClass="int">
        select 
				 count(1)
				from makeploy_user where 1=1 
				<isNotEmpty property="commerceId" prepend="and"> 
	               COMMERCE_ID like '%$commerceId$%'
	            </isNotEmpty>
    </select>

    <!-- mapped statement for IbatisUserDAO.updateUserCommerce -->
    <update id="MS-USER-UPDATE-USER-COMMERCE">
    <![CDATA[
        update makeploy_user set COMMERCE_ID=#commerceId#, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = #userId#)
    ]]>
    </update>

</sqlMap>