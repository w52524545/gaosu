/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.makeploy.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.makeploy.common.dal.daointerface.PartnerRankDAO;

import com.onway.makeploy.common.dal.dataobject.PartnerRankDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.makeploy.common.dal.daointerface.PartnerRankDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/makeploy_partner_rank.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisPartnerRankDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisPartnerRankDAO extends SqlMapClientDaoSupport implements PartnerRankDAO {
	/**
	 *  Insert one <tt>PartnerRankDO</tt> object to DB table <tt>makeploy_partner_rank</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into makeploy_partner_rank(ID,USER_ID,ORDER_ID,PARTNER_NUM,ORDER_NUM,OUT_NUM,CREATER,GMT_CREATE,MODIFIER,GMT_MODIFIED,MEMO) values (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, CURRENT_TIMESTAMP, ?)</tt>
	 *
	 *	@param partnerRank
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int insert(PartnerRankDO partnerRank) throws DataAccessException {
    	if (partnerRank == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-PARTNER-RANK-INSERT", partnerRank);

        return partnerRank.getId();
    }

	/**
	 *  Delete records from DB table <tt>makeploy_partner_rank</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>delete from makeploy_partner_rank where (ID = ?)</tt>
	 *
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int delete(int id) throws DataAccessException {
        Integer param = new Integer(id);

        return getSqlMapClientTemplate().delete("MS-PARTNER-RANK-DELETE", param);
    }

	/**
	 *  Query DB table <tt>makeploy_partner_rank</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from makeploy_partner_rank</tt>
	 *
	 *	@param userId
	 *	@param orderId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int selectPartnerUserIdCount(String userId, String orderId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("orderId", orderId);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-PARTNER-RANK-SELECT-PARTNER-USER-ID-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>makeploy_partner_rank</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_partner_rank</tt>
	 *
	 *	@param userId
	 *	@param orderId
	 *	@param offent
	 *	@param limit
	 *	@return List<PartnerRankDO>
	 *	@throws DataAccessException
	 */	 
    public List<PartnerRankDO> selectPartnerUserId(String userId, String orderId, Integer offent, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("orderId", orderId);
        param.put("offent", offent);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-PARTNER-RANK-SELECT-PARTNER-USER-ID", param);

    }

	/**
	 *  Query DB table <tt>makeploy_partner_rank</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_partner_rank</tt>
	 *
	 *	@param dayAgo
	 *	@param today
	 *	@param offent
	 *	@param limit
	 *	@return List<PartnerRankDO>
	 *	@throws DataAccessException
	 */	 
    public List<PartnerRankDO> selectAll(String dayAgo, String today, Integer offent, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("dayAgo", dayAgo);
        param.put("today", today);
        param.put("offent", offent);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-PARTNER-RANK-SELECT-ALL", param);

    }

	/**
	 *  Query DB table <tt>makeploy_partner_rank</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_partner_rank</tt>
	 *
	 *	@param dayAgo
	 *	@param today
	 *	@param offent
	 *	@param limit
	 *	@return List<PartnerRankDO>
	 *	@throws DataAccessException
	 */	 
    public List<PartnerRankDO> selectAllDesc(String dayAgo, String today, Integer offent, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("dayAgo", dayAgo);
        param.put("today", today);
        param.put("offent", offent);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-PARTNER-RANK-SELECT-ALL-DESC", param);

    }

	/**
	 *  Query DB table <tt>makeploy_partner_rank</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from makeploy_partner_rank</tt>
	 *
	 *	@param dayAgo
	 *	@param today
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int count(String dayAgo, String today) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("dayAgo", dayAgo);
        param.put("today", today);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-PARTNER-RANK-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>makeploy_partner_rank</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_partner_rank</tt>
	 *
	 *	@param dayAgo
	 *	@param offent
	 *	@param limit
	 *	@return PartnerRankDO
	 *	@throws DataAccessException
	 */	 
    public PartnerRankDO selectLastPartner(String dayAgo, Integer offent, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("dayAgo", dayAgo);
        param.put("offent", offent);
        param.put("limit", limit);

        return (PartnerRankDO) getSqlMapClientTemplate().queryForObject("MS-PARTNER-RANK-SELECT-LAST-PARTNER", param);

    }

	/**
	 *  Update DB table <tt>makeploy_partner_rank</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_partner_rank set PARTNER_NUM=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (ID = ?)</tt>
	 *
	 *	@param partnerNum
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int changePartnerNum(int partnerNum, int id) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("partnerNum", new Integer(partnerNum));
        param.put("id", new Integer(id));

        return getSqlMapClientTemplate().update("MS-PARTNER-RANK-CHANGE-PARTNER-NUM", param);
    }

	/**
	 *  Update DB table <tt>makeploy_partner_rank</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_partner_rank set ORDER_NUM=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (ID = ?)</tt>
	 *
	 *	@param orderNum
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int changeOrderNum(int orderNum, int id) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("orderNum", new Integer(orderNum));
        param.put("id", new Integer(id));

        return getSqlMapClientTemplate().update("MS-PARTNER-RANK-CHANGE-ORDER-NUM", param);
    }

	/**
	 *  Update DB table <tt>makeploy_partner_rank</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_partner_rank set OUT_NUM=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (ID = ?)</tt>
	 *
	 *	@param outNum
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int changeOutNum(int outNum, int id) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("outNum", new Integer(outNum));
        param.put("id", new Integer(id));

        return getSqlMapClientTemplate().update("MS-PARTNER-RANK-CHANGE-OUT-NUM", param);
    }

	/**
	 *  Update DB table <tt>makeploy_partner_rank</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_partner_rank set MEMO=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (ID = ?)</tt>
	 *
	 *	@param memo
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int changePartnerMemo(String memo, int id) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("memo", memo);
        param.put("id", new Integer(id));

        return getSqlMapClientTemplate().update("MS-PARTNER-RANK-CHANGE-PARTNER-MEMO", param);
    }

	/**
	 *  Query DB table <tt>makeploy_partner_rank</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_partner_rank</tt>
	 *
	 *	@param orderId
	 *	@return PartnerRankDO
	 *	@throws DataAccessException
	 */	 
    public PartnerRankDO selectByOrderId(String orderId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("orderId", orderId);

        return (PartnerRankDO) getSqlMapClientTemplate().queryForObject("MS-PARTNER-RANK-SELECT-BY-ORDER-ID", param);

    }

	/**
	 *  Query DB table <tt>makeploy_partner_rank</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_partner_rank</tt>
	 *
	 *	@param orderId
	 *	@param userId
	 *	@return PartnerRankDO
	 *	@throws DataAccessException
	 */	 
    public PartnerRankDO selectByOrderIdAndUserId(String orderId, String userId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("orderId", orderId);
        param.put("userId", userId);

        return (PartnerRankDO) getSqlMapClientTemplate().queryForObject("MS-PARTNER-RANK-SELECT-BY-ORDER-ID-AND-USER-ID", param);

    }

	/**
	 *  Query DB table <tt>makeploy_partner_rank</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_partner_rank</tt>
	 *
	 *	@param partnerNum
	 *	@return List<PartnerRankDO>
	 *	@throws DataAccessException
	 */	 
    public List<PartnerRankDO> selectAllBigThan(Integer partnerNum) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("partnerNum", partnerNum);

        return getSqlMapClientTemplate().queryForList("MS-PARTNER-RANK-SELECT-ALL-BIG-THAN", param);

    }

	/**
	 *  Update DB table <tt>makeploy_partner_rank</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_partner_rank set USER_ID=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (ID = ?)</tt>
	 *
	 *	@param userId
	 *	@param id
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int changePartnerUserId(String userId, int id) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);
        param.put("id", new Integer(id));

        return getSqlMapClientTemplate().update("MS-PARTNER-RANK-CHANGE-PARTNER-USER-ID", param);
    }

	/**
	 *  Query DB table <tt>makeploy_partner_rank</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_partner_rank</tt>
	 *
	 *	@param partnerNum
	 *	@return PartnerRankDO
	 *	@throws DataAccessException
	 */	 
    public PartnerRankDO selectByPartnerNum(Integer partnerNum) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("partnerNum", partnerNum);

        return (PartnerRankDO) getSqlMapClientTemplate().queryForObject("MS-PARTNER-RANK-SELECT-BY-PARTNER-NUM", param);

    }

	/**
	 *  Query DB table <tt>makeploy_partner_rank</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_partner_rank</tt>
	 *
	 *	@param partnerNum
	 *	@return List<PartnerRankDO>
	 *	@throws DataAccessException
	 */	 
    public List<PartnerRankDO> selectAllBigEqualThan(Integer partnerNum) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("partnerNum", partnerNum);

        return getSqlMapClientTemplate().queryForList("MS-PARTNER-RANK-SELECT-ALL-BIG-EQUAL-THAN", param);

    }

}