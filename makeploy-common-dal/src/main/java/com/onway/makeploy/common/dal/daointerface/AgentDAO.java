/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.makeploy.common.dal.daointerface;

import com.onway.makeploy.common.dal.dataobject.AgentDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import com.onway.common.lang.Money;
import java.util.Date;
import com.onway.common.lang.Money;
import java.util.Map;

/**
 * A dao interface provides methods to access database table <tt>makeploy_agent</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/makeploy_agent.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: AgentDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public interface AgentDAO {
	/**
	 *  Insert one <tt>AgentDO</tt> object to DB table <tt>makeploy_agent</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into makeploy_agent(ID,USER_ID,USER_NAME,CELL,PROVINCE,CITY,DISTRICT,AREA_INCOME,CHECK_OUT,GMT_CREATE,MODIFIER,GMT_MODIFIED,MEMO) values (?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, ?, CURRENT_TIMESTAMP, ?)</tt>
	 *
	 *	@param agent
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int addAgent(AgentDO agent) throws DataAccessException;

	/**
	 *  Query DB table <tt>makeploy_agent</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_agent</tt>
	 *
	 *	@param userId
	 *	@param cell
	 *	@param province
	 *	@param city
	 *	@param district
	 *	@return AgentDO
	 *	@throws DataAccessException
	 */	 
    public AgentDO selectAll(String userId, String cell, String province, String city, String district) throws DataAccessException;

	/**
	 *  Query DB table <tt>makeploy_agent</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_agent</tt>
	 *
	 *	@param userId
	 *	@param cell
	 *	@param province
	 *	@param city
	 *	@param district
	 *	@param offset
	 *	@param limit
	 *	@return List<AgentDO>
	 *	@throws DataAccessException
	 */	 
    public List<AgentDO> selectAgentInfo(String userId, String cell, String province, String city, String district, Integer offset, Integer limit) throws DataAccessException;

	/**
	 *  Update DB table <tt>makeploy_agent</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_agent set CHECK_OUT=CURRENT_TIMESTAMP, AREA_INCOME=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param areaIncome
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateCheckout(Money areaIncome, String userId) throws DataAccessException;

	/**
	 *  Update DB table <tt>makeploy_agent</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_agent set AREA_INCOME=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param areaIncome
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateOutMoney(Money areaIncome, String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>makeploy_agent</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from makeploy_agent</tt>
	 *
	 *	@param userId
	 *	@param cell
	 *	@param province
	 *	@param city
	 *	@param district
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long count(String userId, String cell, String province, String city, String district) throws DataAccessException;

}