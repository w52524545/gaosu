/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.makeploy.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.makeploy.common.dal.daointerface.ShopDAO;

import com.onway.makeploy.common.dal.dataobject.ShopDO;
import org.springframework.dao.DataAccessException;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.makeploy.common.dal.daointerface.ShopDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/makeploy_shop.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisShopDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisShopDAO extends SqlMapClientDaoSupport implements ShopDAO {
	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_shop</tt>
	 *
	 *	@param userId
	 *	@return ShopDO
	 *	@throws DataAccessException
	 */	 
    public ShopDO selectShopInfoByUserId(String userId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);

        return (ShopDO) getSqlMapClientTemplate().queryForObject("MS-SHOP-SELECT-SHOP-INFO-BY-USER-ID", param);

    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_shop</tt>
	 *
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int selectShopCountByUserId(String userId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);

	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-SHOP-SELECT-SHOP-COUNT-BY-USER-ID", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_shop</tt>
	 *
	 *	@param shopId
	 *	@return ShopDO
	 *	@throws DataAccessException
	 */	 
    public ShopDO selectShopInfoByShopId(String shopId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("shopId", shopId);

        return (ShopDO) getSqlMapClientTemplate().queryForObject("MS-SHOP-SELECT-SHOP-INFO-BY-SHOP-ID", param);

    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_shop</tt>
	 *
	 *	@param cell
	 *	@return ShopDO
	 *	@throws DataAccessException
	 */	 
    public ShopDO selectShopInfoByShopCell(String cell) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("cell", cell);

        return (ShopDO) getSqlMapClientTemplate().queryForObject("MS-SHOP-SELECT-SHOP-INFO-BY-SHOP-CELL", param);

    }

	/**
	 *  Update DB table <tt>makeploy_shop</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_shop set SHOP_NAME=?, SHOP_DEC=?, CELL=?, SHOP_ADDR=?, SHOP_URL=?, INDUSTRY=?, LOACTION_X=?, LOACTION_Y=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (SHOP_ID = ?)</tt>
	 *
	 *	@param shop
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateShopInfo(ShopDO shop) throws DataAccessException {
    	if (shop == null) {
    		throw new IllegalArgumentException("Can't update by a null data object.");
    	}


        return getSqlMapClientTemplate().update("MS-SHOP-UPDATE-SHOP-INFO", shop);
    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_shop where (SHOP_ID = ?)</tt>
	 *
	 *	@param shopId
	 *	@return ShopDO
	 *	@throws DataAccessException
	 */	 
    public ShopDO selectShopByShopId(String shopId) throws DataAccessException {

 
        return (ShopDO) getSqlMapClientTemplate().queryForObject("MS-SHOP-SELECT-SHOP-BY-SHOP-ID", shopId);

    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_shop</tt>
	 *
	 *	@return List<ShopDO>
	 *	@throws DataAccessException
	 */	 
    public List<ShopDO> selectAllShop() throws DataAccessException {


        return getSqlMapClientTemplate().queryForList("MS-SHOP-SELECT-ALL-SHOP", null);

    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_shop</tt>
	 *
	 *	@return List<ShopDO>
	 *	@throws DataAccessException
	 */	 
    public List<ShopDO> selectUnionShopOnHome() throws DataAccessException {


        return getSqlMapClientTemplate().queryForList("MS-SHOP-SELECT-UNION-SHOP-ON-HOME", null);

    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_shop</tt>
	 *
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int selectUnionShopCount() throws DataAccessException {


	    Integer retObj = (Integer) getSqlMapClientTemplate().queryForObject("MS-SHOP-SELECT-UNION-SHOP-COUNT", null);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.intValue();
		}

    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_shop</tt>
	 *
	 *	@param startRow
	 *	@param pageSize
	 *	@return List<ShopDO>
	 *	@throws DataAccessException
	 */	 
    public List<ShopDO> selectUnionShop(Integer startRow, Integer pageSize) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("startRow", startRow);
        param.put("pageSize", pageSize);

        return getSqlMapClientTemplate().queryForList("MS-SHOP-SELECT-UNION-SHOP", param);

    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_shop</tt>
	 *
	 *	@param shopId
	 *	@param startRow
	 *	@param pageSize
	 *	@return List<ShopDO>
	 *	@throws DataAccessException
	 */	 
    public List<ShopDO> search(String shopId, Integer startRow, Integer pageSize) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("shopId", shopId);
        param.put("startRow", startRow);
        param.put("pageSize", pageSize);

        return getSqlMapClientTemplate().queryForList("MS-SHOP-SEARCH", param);

    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_shop where (USER_ID = ?)</tt>
	 *
	 *	@param userId
	 *	@return List<ShopDO>
	 *	@throws DataAccessException
	 */	 
    public List<ShopDO> selectShopListByUserId(String userId) throws DataAccessException {

 
        return getSqlMapClientTemplate().queryForList("MS-SHOP-SELECT-SHOP-LIST-BY-USER-ID", userId);

    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_shop</tt>
	 *
	 *	@param shopId
	 *	@param cell
	 *	@param offent
	 *	@param limit
	 *	@return List<ShopDO>
	 *	@throws DataAccessException
	 */	 
    public List<ShopDO> selectShopIdandCellInfo(String shopId, String cell, Integer offent, Integer limit) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("shopId", shopId);
        param.put("cell", cell);
        param.put("offent", offent);
        param.put("limit", limit);

        return getSqlMapClientTemplate().queryForList("MS-SHOP-SELECT-SHOP-IDAND-CELL-INFO", param);

    }

	/**
	 *  Update DB table <tt>makeploy_shop</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_shop set UNION_FLG=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (SHOP_ID = ?)</tt>
	 *
	 *	@param unionFlg
	 *	@param shopId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateUnion(String unionFlg, String shopId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("unionFlg", unionFlg);
        param.put("shopId", shopId);

        return getSqlMapClientTemplate().update("MS-SHOP-UPDATE-UNION", param);
    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from makeploy_shop</tt>
	 *
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long count() throws DataAccessException {


	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-SHOP-COUNT", null);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_shop</tt>
	 *
	 *	@param shopId
	 *	@param userId
	 *	@param offset
	 *	@param limit
	 *	@param unionFlag
	 *	@param industry
	 *	@return List<ShopDO>
	 *	@throws DataAccessException
	 */	 
    public List<ShopDO> selectShopInfo(String shopId, String userId, Integer offset, Integer limit, String unionFlag, String industry) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("shopId", shopId);
        param.put("userId", userId);
        param.put("offset", offset);
        param.put("limit", limit);
        param.put("unionFlag", unionFlag);
        param.put("industry", industry);

        return getSqlMapClientTemplate().queryForList("MS-SHOP-SELECT-SHOP-INFO", param);

    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from makeploy_shop</tt>
	 *
	 *	@param shopId
	 *	@param userId
	 *	@param unionflag
	 *	@param industry
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long selectShopInfoCount(String shopId, String userId, String unionflag, String industry) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("shopId", shopId);
        param.put("userId", userId);
        param.put("unionflag", unionflag);
        param.put("industry", industry);

	    Long retObj = (Long) getSqlMapClientTemplate().queryForObject("MS-SHOP-SELECT-SHOP-INFO-COUNT", param);

		if (retObj == null) {
		    return 0;
		} else {
		    return retObj.longValue();
		}

    }

	/**
	 *  Insert one <tt>ShopDO</tt> object to DB table <tt>makeploy_shop</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into makeploy_shop(ID,SHOP_ID,USER_ID,UNION_FLG,SHOP_URL,DEL_FLAG,CREATER,GMT_CREATE,MODIFIER,GMT_MODIFIED,MEMO) values (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, CURRENT_TIMESTAMP, ?)</tt>
	 *
	 *	@param shop
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int creatNewShop(ShopDO shop) throws DataAccessException {
    	if (shop == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-SHOP-CREAT-NEW-SHOP", shop);

        return shop.getId();
    }

	/**
	 *  Insert one <tt>ShopDO</tt> object to DB table <tt>makeploy_shop</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into makeploy_shop(SHOP_ID,USER_ID,SHOP_NAME,CELL,SHOP_STAR,SHOP_DEC,SHOP_ADDR,UNION_FLG,DEL_FLAG,INDUSTRY,CREATER,GMT_CREATE,MODIFIER,GMT_MODIFIED,MEMO) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, CURRENT_TIMESTAMP, ?)</tt>
	 *
	 *	@param shop
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int addCheckedShop(ShopDO shop) throws DataAccessException {
    	if (shop == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-SHOP-ADD-CHECKED-SHOP", shop);

        return shop.getId();
    }

	/**
	 *  Query DB table <tt>makeploy_shop</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_shop</tt>
	 *
	 *	@return List<ShopDO>
	 *	@throws DataAccessException
	 */	 
    public List<ShopDO> selectAllShopInfo() throws DataAccessException {


        return getSqlMapClientTemplate().queryForList("MS-SHOP-SELECT-ALL-SHOP-INFO", null);

    }

	/**
	 *  Update DB table <tt>makeploy_shop</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_shop set LOACTION_X=?, LOACTION_Y=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (SHOP_ID = ?)</tt>
	 *
	 *	@param loactionX
	 *	@param loactionY
	 *	@param shopId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateShopLngAndLat(double loactionX, double loactionY, String shopId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("loactionX", new Double(loactionX));
        param.put("loactionY", new Double(loactionY));
        param.put("shopId", shopId);

        return getSqlMapClientTemplate().update("MS-SHOP-UPDATE-SHOP-LNG-AND-LAT", param);
    }

	/**
	 *  Update DB table <tt>makeploy_shop</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_shop set CREATER=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (SHOP_ID = ?)</tt>
	 *
	 *	@param creater
	 *	@param shopId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateShopLevel(String creater, String shopId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("creater", creater);
        param.put("shopId", shopId);

        return getSqlMapClientTemplate().update("MS-SHOP-UPDATE-SHOP-LEVEL", param);
    }

	/**
	 *  Update DB table <tt>makeploy_shop</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_shop set SHOP_UP=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (SHOP_ID = ?)</tt>
	 *
	 *	@param shopUp
	 *	@param shopId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int setShopUp(String shopUp, String shopId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("shopUp", shopUp);
        param.put("shopId", shopId);

        return getSqlMapClientTemplate().update("MS-SHOP-SET-SHOP-UP", param);
    }

	/**
	 *  Update DB table <tt>makeploy_shop</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_shop set SELL_COUNT=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (SHOP_ID = ?)</tt>
	 *
	 *	@param sellCount
	 *	@param shopId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int changeShopCellCount(int sellCount, String shopId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("sellCount", new Integer(sellCount));
        param.put("shopId", shopId);

        return getSqlMapClientTemplate().update("MS-SHOP-CHANGE-SHOP-CELL-COUNT", param);
    }

	/**
	 *  Update DB table <tt>makeploy_shop</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_shop set DEL_FLAG=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (SHOP_ID = ?)</tt>
	 *
	 *	@param delFlag
	 *	@param shopId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int changeShopDelFlag(String delFlag, String shopId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("delFlag", delFlag);
        param.put("shopId", shopId);

        return getSqlMapClientTemplate().update("MS-SHOP-CHANGE-SHOP-DEL-FLAG", param);
    }

}