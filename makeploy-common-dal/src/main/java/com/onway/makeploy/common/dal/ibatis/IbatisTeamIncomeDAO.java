/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.makeploy.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.makeploy.common.dal.daointerface.TeamIncomeDAO;

import com.onway.makeploy.common.dal.dataobject.TeamIncomeDO;
import org.springframework.dao.DataAccessException;
import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.makeploy.common.dal.daointerface.TeamIncomeDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/makeploy_team_income.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisTeamIncomeDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisTeamIncomeDAO extends SqlMapClientDaoSupport implements TeamIncomeDAO {
	/**
	 *  Query DB table <tt>makeploy_team_income</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_team_income</tt>
	 *
	 *	@param userId
	 *	@return TeamIncomeDO
	 *	@throws DataAccessException
	 */	 
    public TeamIncomeDO selectTeamIncomeByUserId(String userId) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("userId", userId);

        return (TeamIncomeDO) getSqlMapClientTemplate().queryForObject("MS-TEAM-INCOME-SELECT-TEAM-INCOME-BY-USER-ID", param);

    }

	/**
	 *  Insert one <tt>TeamIncomeDO</tt> object to DB table <tt>makeploy_team_income</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into makeploy_team_income(ID,USER_ID,SELL_ACCOUT,INCOME_ACCOUT,TEAM_SUM,TIME,CREATER,GMT_CREATE,MODIFIER,GMT_MODIFIED,MEMO) values (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, CURRENT_TIMESTAMP, ?)</tt>
	 *
	 *	@param teamIncome
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int addNewTeam(TeamIncomeDO teamIncome) throws DataAccessException {
    	if (teamIncome == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-TEAM-INCOME-ADD-NEW-TEAM", teamIncome);

        return teamIncome.getId();
    }

	/**
	 *  Update DB table <tt>makeploy_team_income</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_team_income set TEAM_SUM=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param teamSum
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateTeamsum(int teamSum, String userId) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("teamSum", new Integer(teamSum));
        param.put("userId", userId);

        return getSqlMapClientTemplate().update("MS-TEAM-INCOME-UPDATE-TEAMSUM", param);
    }

}