/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.makeploy.common.dal.daointerface;

import com.onway.makeploy.common.dal.dataobject.UserDO;
import org.springframework.dao.DataAccessException;
import com.onway.common.lang.Money;
import java.util.List;
import java.util.Date;
import com.onway.common.lang.Money;
import java.util.Map;

/**
 * A dao interface provides methods to access database table <tt>makeploy_user</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/makeploy_user.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: UserDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public interface UserDAO {
	/**
	 *  Query DB table <tt>makeploy_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_user</tt>
	 *
	 *	@param userId
	 *	@return UserDO
	 *	@throws DataAccessException
	 */	 
    public UserDO selectUserInfoByUserId(String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>makeploy_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_user</tt>
	 *
	 *	@param commerceId
	 *	@return UserDO
	 *	@throws DataAccessException
	 */	 
    public UserDO selectUserInfoByCommerceId(String commerceId) throws DataAccessException;

	/**
	 *  Insert one <tt>UserDO</tt> object to DB table <tt>makeploy_user</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into makeploy_user(ID,USER_ID,WECHAT_ID,PROMOTE_ID,SHOP_ID,COMMERCE_ID,USER_NAME,USER_NUM,CELL,NICK_NAME,SEX,HEAD_URL,PASS_WORD,CERT_TYPE,CERT_NO,CONSUME_ACCOUT,DIVIDEND_ACCOUT,WITHDRAW_ACCOUT,BALANCE,TOTAL_BALANCE,INCOME_WEEK,HIGH_USER_ID,QR_URL,CREATER,GMT_CREATE,MODIFIER,GMT_MODIFIED,MEMO) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, CURRENT_TIMESTAMP, ?)</tt>
	 *
	 *	@param user
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int addUserInfo(UserDO user) throws DataAccessException;

	/**
	 *  Update DB table <tt>makeploy_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_user set CELL=?, NICK_NAME=?, HEAD_URL=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param user
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateUserInfo(UserDO user) throws DataAccessException;

	/**
	 *  Update DB table <tt>makeploy_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_user set QR_URL=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param qrUrl
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateUserQR(String qrUrl, String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>makeploy_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_user</tt>
	 *
	 *	@param cell
	 *	@param role
	 *	@return String
	 *	@throws DataAccessException
	 */	 
    public String login(String cell, String role) throws DataAccessException;

	/**
	 *  Query DB table <tt>makeploy_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_user where (CELL = ?)</tt>
	 *
	 *	@param cell
	 *	@return UserDO
	 *	@throws DataAccessException
	 */	 
    public UserDO selectUserInfoByCell(String cell) throws DataAccessException;

	/**
	 *  Update DB table <tt>makeploy_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_user set WITHDRAW_ACCOUT=?, BALANCE=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param withdrawAccout
	 *	@param balance
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateWithDraw(Money withdrawAccout, Money balance, String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>makeploy_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_user</tt>
	 *
	 *	@param userId
	 *	@param cell
	 *	@param userNickName
	 *	@param offent
	 *	@param limit
	 *	@return List<UserDO>
	 *	@throws DataAccessException
	 */	 
    public List<UserDO> userInfo(String  userId, String  cell, String  userNickName, Integer offent, Integer limit) throws DataAccessException;

	/**
	 *  Query DB table <tt>makeploy_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select count(1) from makeploy_user</tt>
	 *
	 *	@param userId
	 *	@param cell
	 *	@param userNickName
	 *	@return long
	 *	@throws DataAccessException
	 */	 
    public long count(String  userId, String  cell, String  userNickName) throws DataAccessException;

	/**
	 *  Update DB table <tt>makeploy_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_user set POINT_ACCOUT=?, BALANCE=?, WITHDRAW_ACCOUT=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param pointAccout
	 *	@param balance
	 *	@param withdrawAccout
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateUserReturn(int pointAccout, Money balance, Money withdrawAccout, String userId) throws DataAccessException;

	/**
	 *  Update DB table <tt>makeploy_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_user set PASS_WORD=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (CELL = ?)</tt>
	 *
	 *	@param passWord
	 *	@param cell
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updatePass(String passWord, String cell) throws DataAccessException;

	/**
	 *  Update DB table <tt>makeploy_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_user set SHOP_ID=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param shopId
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int addShopByUserId(String shopId, String userId) throws DataAccessException;

	/**
	 *  Query DB table <tt>makeploy_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makelploy_user</tt>
	 *
	 *	@param userId
	 *	@param cell
	 *	@param offset
	 *	@param limit
	 *	@return List<UserDO>
	 *	@throws DataAccessException
	 */	 
    public List<UserDO> selectByUserIDAndCell(String userId, String cell, Integer offset, Integer limit) throws DataAccessException;

	/**
	 *  Update DB table <tt>makeploy_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_user set HIGH_USER_ID=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param highUserId
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateHighByUserId(String highUserId, String userId) throws DataAccessException;

	/**
	 *  Update DB table <tt>makeploy_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_user set HIGH_USER_ID=?, CERT_TYPE='1', GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param highUserId
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int sethightestUser(String highUserId, String userId) throws DataAccessException;

	/**
	 *  Update DB table <tt>makeploy_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_user set BALANCE=?, TOTAL_BALANCE=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param user
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateBalanceMoneyByUserId(UserDO user) throws DataAccessException;

	/**
	 *  Query DB table <tt>makeploy_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_user</tt>
	 *
	 *	@param shopId
	 *	@return UserDO
	 *	@throws DataAccessException
	 */	 
    public UserDO selectUserInfoByShopId(String shopId) throws DataAccessException;

	/**
	 *  Query DB table <tt>makeploy_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_user</tt>
	 *
	 *	@param commerceId
	 *	@param startRow
	 *	@param pageSize
	 *	@return List<UserDO>
	 *	@throws DataAccessException
	 */	 
    public List<UserDO> searchCommerceUser(String commerceId, Integer startRow, Integer pageSize) throws DataAccessException;

	/**
	 *  Query DB table <tt>makeploy_user</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_user</tt>
	 *
	 *	@param commerceId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int searchCommerceUserCount(String commerceId) throws DataAccessException;

	/**
	 *  Update DB table <tt>makeploy_user</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_user set COMMERCE_ID=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (USER_ID = ?)</tt>
	 *
	 *	@param commerceId
	 *	@param userId
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateUserCommerce(String commerceId, String userId) throws DataAccessException;

}