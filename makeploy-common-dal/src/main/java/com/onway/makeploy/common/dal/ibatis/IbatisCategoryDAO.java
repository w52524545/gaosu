/**
 * yingyinglicai.com Inc.
 * Copyright (c) 2013-2014 All Rights Reserved.
 */
 package com.onway.makeploy.common.dal.ibatis;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.onway.makeploy.common.dal.daointerface.CategoryDAO;

import com.onway.makeploy.common.dal.dataobject.CategoryDO;
import java.util.List;
import org.springframework.dao.DataAccessException;
import java.util.Map;
import java.util.HashMap;

/**
 * An ibatis based implementation of dao interface <tt>com.onway.makeploy.common.dal.daointerface.CategoryDAO</tt>.
 *
 * This file is generated by <tt>onway-gen-dal</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>onway</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and 
 * find the corresponding configuration file (<tt>tables/makeploy_category.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>onway-gen-dal</tt> 
 * to generate this file.
 *
 * @author guangdong.li
 * @version $Id: IbatisCategoryDAO.java,v 1.0 2013/10/29 07:34:20 guangdong.li Exp $
 */
public class IbatisCategoryDAO extends SqlMapClientDaoSupport implements CategoryDAO {
	/**
	 *  Query DB table <tt>makeploy_category</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_category</tt>
	 *
	 *	@param fatherName
	 *	@return List<CategoryDO>
	 *	@throws DataAccessException
	 */	 
    public List<CategoryDO> selectTypeByFather(String fatherName) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("fatherName", fatherName);

        return getSqlMapClientTemplate().queryForList("MS-CATEGORY-SELECT-TYPE-BY-FATHER", param);

    }

	/**
	 *  Query DB table <tt>makeploy_category</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_category</tt>
	 *
	 *	@param fatherName
	 *	@return List<CategoryDO>
	 *	@throws DataAccessException
	 */	 
    public List<CategoryDO> selectByFather(String fatherName) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("fatherName", fatherName);

        return getSqlMapClientTemplate().queryForList("MS-CATEGORY-SELECT-BY-FATHER", param);

    }

	/**
	 *  Query DB table <tt>makeploy_category</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_category</tt>
	 *
	 *	@param fatherName
	 *	@return CategoryDO
	 *	@throws DataAccessException
	 */	 
    public CategoryDO selectOneTypeByFather(String fatherName) throws DataAccessException {

	Map<String,Object> param = new HashMap<String,Object>();

        param.put("fatherName", fatherName);

        return (CategoryDO) getSqlMapClientTemplate().queryForObject("MS-CATEGORY-SELECT-ONE-TYPE-BY-FATHER", param);

    }

	/**
	 *  Query DB table <tt>makeploy_category</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_category</tt>
	 *
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 
    public List<String> selectAllFather() throws DataAccessException {


        return getSqlMapClientTemplate().queryForList("MS-CATEGORY-SELECT-ALL-FATHER", null);

    }

	/**
	 *  Query DB table <tt>makeploy_category</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_category</tt>
	 *
	 *	@return List<String>
	 *	@throws DataAccessException
	 */	 
    public List<String> selectOnlyFather() throws DataAccessException {


        return getSqlMapClientTemplate().queryForList("MS-CATEGORY-SELECT-ONLY-FATHER", null);

    }

	/**
	 *  Update DB table <tt>makeploy_category</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_category set memo='1', GMT_MODIFIED=CURRENT_TIMESTAMP where ((FATHER_NAME = ?) AND (memo = '2'))</tt>
	 *
	 *	@param fatherName
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteOnlyFather(String fatherName) throws DataAccessException {

        return getSqlMapClientTemplate().update("MS-CATEGORY-DELETE-ONLY-FATHER", fatherName);
    }

	/**
	 *  Update DB table <tt>makeploy_category</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_category set FATHER_IMG=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (FATHER_NAME = ?)</tt>
	 *
	 *	@param fatherImg
	 *	@param fatherName
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateFatherIcon(String fatherImg, String fatherName) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("fatherImg", fatherImg);
        param.put("fatherName", fatherName);

        return getSqlMapClientTemplate().update("MS-CATEGORY-UPDATE-FATHER-ICON", param);
    }

	/**
	 *  Update DB table <tt>makeploy_category</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_category set FATHER_NAME=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (FATHER_NAME = ?)</tt>
	 *
	 *	@param fatherName
	 *	@param fatherName2
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateFatherName(String fatherName, String fatherName2) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("fatherName", fatherName);
        param.put("fatherName2", fatherName2);

        return getSqlMapClientTemplate().update("MS-CATEGORY-UPDATE-FATHER-NAME", param);
    }

	/**
	 *  Update DB table <tt>makeploy_category</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_category set MEMO='1', GMT_MODIFIED=CURRENT_TIMESTAMP where (FATHER_NAME = ?)</tt>
	 *
	 *	@param fatherName
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int delectFatherType(String fatherName) throws DataAccessException {

        return getSqlMapClientTemplate().update("MS-CATEGORY-DELECT-FATHER-TYPE", fatherName);
    }

	/**
	 *  Insert one <tt>CategoryDO</tt> object to DB table <tt>makeploy_category</tt>, return primary key
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>insert into makeploy_category(ID,FATHER_NAME,CHILDREN_NAME,FATHER_IMG,CHILDREN_IMG,TYPE,CREATER,GMT_CREATE,MODIFIER,GMT_MODIFIED,MEMO) values (?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, CURRENT_TIMESTAMP, ?)</tt>
	 *
	 *	@param category
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int addType(CategoryDO category) throws DataAccessException {
    	if (category == null) {
    		throw new IllegalArgumentException("Can't insert a null data object into db.");
    	}
    	
        getSqlMapClientTemplate().insert("MS-CATEGORY-ADD-TYPE", category);

        return category.getId();
    }

	/**
	 *  Update DB table <tt>makeploy_category</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_category set MEMO='1', GMT_MODIFIED=CURRENT_TIMESTAMP where (CHILDREN_NAME = ?)</tt>
	 *
	 *	@param childrenName
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int deleteChirdType(String childrenName) throws DataAccessException {

        return getSqlMapClientTemplate().update("MS-CATEGORY-DELETE-CHIRD-TYPE", childrenName);
    }

	/**
	 *  Query DB table <tt>makeploy_category</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_category where (MEMO = '3')</tt>
	 *
	 *	@return List<CategoryDO>
	 *	@throws DataAccessException
	 */	 
    public List<CategoryDO> selectSize() throws DataAccessException {


        return getSqlMapClientTemplate().queryForList("MS-CATEGORY-SELECT-SIZE", null);

    }

	/**
	 *  Query DB table <tt>makeploy_category</tt> for records.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>select * from makeploy_category where ((MEMO = '3') AND (FATHER_NAME = ?))</tt>
	 *
	 *	@param fatherName
	 *	@return CategoryDO
	 *	@throws DataAccessException
	 */	 
    public CategoryDO selectParamenterBySize(String fatherName) throws DataAccessException {

 
        return (CategoryDO) getSqlMapClientTemplate().queryForObject("MS-CATEGORY-SELECT-PARAMENTER-BY-SIZE", fatherName);

    }

	/**
	 *  Update DB table <tt>makeploy_category</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_category set FATHER_IMG=?, GMT_MODIFIED=CURRENT_TIMESTAMP where ((MEMO = '3') AND (FATHER_NAME = ?))</tt>
	 *
	 *	@param fatherImg
	 *	@param fatherName
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateParamenterBySize(String fatherImg, String fatherName) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("fatherImg", fatherImg);
        param.put("fatherName", fatherName);

        return getSqlMapClientTemplate().update("MS-CATEGORY-UPDATE-PARAMENTER-BY-SIZE", param);
    }

	/**
	 *  Update DB table <tt>makeploy_category</tt>.
	 *
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>update makeploy_category set TYPE=?, GMT_MODIFIED=CURRENT_TIMESTAMP where (FATHER_NAME = ?)</tt>
	 *
	 *	@param type
	 *	@param fatherName
	 *	@return int
	 *	@throws DataAccessException
	 */	 
    public int updateTypeToHomePage(String type, String fatherName) throws DataAccessException {
        Map<String,Object> param = new HashMap<String,Object>();

        param.put("type", type);
        param.put("fatherName", fatherName);

        return getSqlMapClientTemplate().update("MS-CATEGORY-UPDATE-TYPE-TO-HOME-PAGE", param);
    }

}